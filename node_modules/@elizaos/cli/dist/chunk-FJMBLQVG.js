
import { createRequire } from 'module';
const require = createRequire(import.meta.url);

import {
  handleError
} from "./chunk-RZ4QEERU.js";
import {
  Command
} from "./chunk-W4LNCUVN.js";

// src/commands/setup-monorepo.ts
import { execa } from "execa";
import fs from "node:fs";
import path from "node:path";
async function cloneRepository(repo, branch, destination) {
  try {
    const repoUrl = `https://github.com/${repo}`;
    console.info(`Cloning ${repoUrl} (branch: ${branch}) to ${destination}...`);
    await execa("git", ["clone", "-b", branch, repoUrl, destination], {
      stdio: "inherit"
    });
    console.log("Repository cloned successfully");
  } catch (error) {
    if (error.message && error.message.includes("exit code 128")) {
      console.error(`
\u274C Branch '${branch}' doesn't exist in the ElizaOS repository.`);
      console.error(`Please specify a valid branch name. Common branches include:`);
      console.error(`  \u2022 main - The main branch`);
      console.error(`  \u2022 v2-develop - The development branch (default)`);
      console.error(
        `
For a complete list of branches, visit: https://github.com/elizaOS/eliza/branches`
      );
      throw new Error(`Branch '${branch}' not found`);
    }
    throw new Error(`Failed to clone repository: ${error.message}`);
  }
}
function displayNextSteps(dir) {
  console.log("\nTo complete the ElizaOS setup, follow these steps:\n");
  console.log("1. Navigate to the project directory:");
  console.log(`   cd ${dir}`);
  console.log("\n2. Install dependencies:");
  console.log("   bun install");
  console.log("\n3. Build the project:");
  console.log("   bun run build");
  console.log("\n4. Start ElizaOS:");
  console.log("   bun run start or bun run dev");
  console.log("\nNote: Make sure you have Node.js and bun installed on your system.");
}
var setupMonorepo = new Command().name("setup-monorepo").description("Clone ElizaOS monorepo from a specific branch, defaults to v2-develop").option("-b, --branch <branch>", "Branch to install", "v2-develop").option("-d, --dir <directory>", "Destination directory", "./eliza").action(async (options) => {
  try {
    const repo = "elizaOS/eliza";
    const branch = options.branch || "v2-develop";
    const dir = options.dir || "./eliza";
    const destinationDir = path.resolve(process.cwd(), dir);
    if (fs.existsSync(destinationDir)) {
      const files = fs.readdirSync(destinationDir);
      if (files.length > 0) {
        throw new Error(
          `Destination directory ${destinationDir} already exists and is not empty`
        );
      }
    } else {
      fs.mkdirSync(destinationDir, { recursive: true });
    }
    await cloneRepository(repo, branch, destinationDir);
    displayNextSteps(dir);
  } catch (error) {
    handleError(error);
  }
});

export {
  setupMonorepo
};
