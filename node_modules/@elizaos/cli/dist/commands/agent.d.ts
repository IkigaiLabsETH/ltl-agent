import { OptionValues, Command } from 'commander';

declare function getAgentRuntimeUrl(opts: OptionValues): string;
declare function getAgentsBaseUrl(opts: OptionValues): string;
/**
 * Defines the structure of AgentBasic interface.
 * @property {string} id - The unique identifier of the agent.
 * @property {string} name - The name of the agent.
 * @property {string} [status] - The status of the agent (optional).
 * @property {unknown} [key] - Additional properties can be added dynamically using any key.
 */
interface AgentBasic {
    id: string;
    name: string;
    status?: string;
    [key: string]: unknown;
}
/**
 * Asynchronously fetches a list of basic agent information from the server.
 * @param {OptionValues} opts - The command options potentially containing the remote URL.
 * @returns {Promise<AgentBasic[]>} A promise that resolves to an array of AgentBasic objects.
 * @throws {Error} If the fetch request fails.
 */
declare function getAgents(opts: OptionValues): Promise<AgentBasic[]>;
declare const agent: Command;

export { agent, getAgentRuntimeUrl, getAgents, getAgentsBaseUrl };
